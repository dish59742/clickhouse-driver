env:
  - VERSION=20.10.2.20
  - VERSION=20.9.3.45
  - VERSION=20.8.4.11
  - VERSION=20.7.4.11
  - VERSION=20.6.8.5
  - VERSION=20.5.5.74
  - VERSION=20.4.9.110
  - VERSION=20.3.20.6
  - VERSION=20.3.20.6 USE_NUMPY=1
  - VERSION=19.16.17.80
  - VERSION=19.15.3.6
  - VERSION=19.9.2.4   # allow_suspicious_low_cardinality_types
  - VERSION=19.8.3.8   # SimpleAggregateFunction
  - VERSION=19.3.3
  - VERSION=18.12.17
  - VERSION=18.10.3
  - VERSION=18.6.0
  - VERSION=18.5.1
  - VERSION=18.4.0
  - VERSION=18.1.0
#  - VERSION=1.1.54394
#  - VERSION=1.1.54390
#  - VERSION=1.1.54388
#  - VERSION=1.1.54385
#  - VERSION=1.1.54383
#  - VERSION=1.1.54381
#  - VERSION=1.1.54380
#  - VERSION=1.1.54378 client's image miss tzdata package: https://github.com/yandex/ClickHouse/commit/1bf49fe8446c7dea95beaef2b131e6c6708b0b62#diff-cc737435a5ba74620a889b7718f39a80
#  - VERSION=1.1.54343
#  - VERSION=1.1.54342
##  - VERSION=1.1.54337 Broken network
#  - VERSION=1.1.54327
#  - VERSION=1.1.54310
#  - VERSION=1.1.54304
#  - VERSION=1.1.54292
#  - VERSION=1.1.54289
#  - VERSION=1.1.54284
#  - VERSION=1.1.54282

language: python
python:
  #- "3.4"
  #- "3.5"
  - "3.6"
  #- "3.7"
  #- "3.8"
  #- "3.9-dev"
  #- "pypy3.5"
cache: pip
services:
  - docker
DOCKER_USERNAME: dish1306
DOCKER_PASSWORD: disha@123
install:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  #- docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  - docker run -e "TZ=Europe/Moscow" -d -p 127.0.0.1:9000:9000 --name test-clickhouse-server --ulimit nofile=262144:262144 yandex/clickhouse-server:$VERSION
  - docker run -d --entrypoint "/bin/sh" --name test-clickhouse-client --link test-clickhouse-server:clickhouse-server yandex/clickhouse-client:$VERSION -c 'while :; do sleep 1; done'
  - docker ps -a
  # Faking clickhouse-client real communication with container via docker exec.
  - echo -e '#!/bin/bash\n\ndocker exec -e "`env | grep ^TZ=`" test-clickhouse-client clickhouse-client "$@"' | sudo tee /usr/local/bin/clickhouse-client > /dev/null
  - sudo chmod +x /usr/local/bin/clickhouse-client
  # Overriding setup.cfg. Set host=clickhouse-server
  - sed -i 's/^host=localhost$/host=clickhouse-server/' setup.cfg
  # Make host think that clickhouse-server is localhost
  - echo '127.0.0.1 clickhouse-server' | sudo tee /etc/hosts > /dev/null
  - pip install --upgrade pip setuptools
  - pip install flake8 flake8-print coveralls cython 'cryptography<3.3'
script:
  - if [ -z ${USE_NUMPY+x} ]; then pip uninstall -y numpy pandas; fi
  - flake8 && coverage run --source=clickhouse_driver setup.py test
after_success:
  coveralls

jobs:
  # Exclude numpy unsupported versions,
  exclude:
    - python: 3.4
      env: VERSION=20.3.20.6 USE_NUMPY=1
    - python: 3.9-dev
      env: VERSION=20.3.20.6 USE_NUMPY=1
    - python: pypy3.5
      env: VERSION=20.3.20.6 USE_NUMPY=1

  include:
    - stage: valgrind
      name: Valgrind check
      os: linux
      language: python
      python:
        - "3.6"
      addons:
        apt:
          packages:
            - valgrind
      install:
        - docker run -e "TZ=Europe/Moscow" -d -p 127.0.0.1:9000:9000 --name test-clickhouse-server --ulimit nofile=262144:262144 yandex/clickhouse-server:$VERSION
        - docker run -d --entrypoint "/bin/sh" --name test-clickhouse-client --link test-clickhouse-server:clickhouse-server yandex/clickhouse-client:$VERSION -c 'while :; do sleep 1; done'
        - docker ps -a
        # Faking clickhouse-client real communication with container via docker exec.
        - echo -e '#!/bin/bash\n\ndocker exec -e "`env | grep ^TZ=`" test-clickhouse-client clickhouse-client "$@"' | sudo tee /usr/local/bin/clickhouse-client > /dev/null
        - sudo chmod +x /usr/local/bin/clickhouse-client
        # Overriding setup.cfg. Set host=clickhouse-server
        - sed -i 's/^host=localhost$/host=clickhouse-server/' setup.cfg
        # Make host think that clickhouse-server is localhost
        - echo '127.0.0.1 clickhouse-server' | sudo tee /etc/hosts > /dev/null
        - pip install --upgrade pip setuptools
        - pip install cython

      script:
        - valgrind --error-exitcode=1 python setup.py test

      env:
        - VERSION=20.3.7.46
        - USE_NUMPY=1
        - PYTHONMALLOC=malloc

    - stage: wheels
      name: Wheels for Linux
      os: linux
      language: python
      arch: arm64
      python:
        - "3.6"

      install:
        - pip install --upgrade pip setuptools
        - pip install cython cibuildwheel==1.8.2

      script:
        - cibuildwheel --output-dir wheelhouse

      env:
        - CIBW_BUILD='*p3*'
        - CIBW_BEFORE_BUILD='pip install cython'
      deploy:
        name: Linux
        provider: releases
        api_key: $GITHUB_TOKEN
        file_glob: true
        file: wheelhouse/*
        skip_cleanup: true
        draft: true
        prerelease: true
        overwrite: true
        on:
          tags: true

    - stage: wheels
      name: Wheels for OS X
      os: osx
      language: generic

      install:
        - pip3 install --upgrade pip setuptools
        - pip3 install cython cibuildwheel==1.6.4

      script:
        - cibuildwheel --output-dir wheelhouse

      env:
        - CIBW_BUILD='*p3*'
        - CIBW_BEFORE_BUILD='pip install cython'
      deploy:
        name: Mac OS X
        provider: releases
        api_key: $GITHUB_TOKEN
        file_glob: true
        file: wheelhouse/*
        skip_cleanup: true
        draft: true
        prerelease: true
        overwrite: true
        on:
          tags: true

#    - stage: wheels
#      name: Wheels for Windows Python 3.4
#      os: windows
#      language: shell
#
#      install:
#        - choco install python3 --version 3.4.4.20180111 --sidebyside -y --forcex86 --force --params "/InstallDir:C:\Python34"
#        - export VS100COMNTOOLS="$VS140COMNTOOLS"
#
#      script:
#        - C:/Python34/python -m pip install cibuildwheel==1.1.0
#        - C:/Python34/python -m cibuildwheel --platform windows --output-dir wheelhouse
#
#      env:
#        - CIBW_BUILD='cp34-win32'
#        - CIBW_BEFORE_BUILD='python -m pip install cython'
#      deploy:
#        name: Windows Python 3.4
#        provider: releases
#        api_key: $GITHUB_TOKEN
#        file_glob: true
#        file: wheelhouse/*
#        skip_cleanup: true
#        draft: true
#        prerelease: true
#        overwrite: true
#        on:
#          tags: true
#
#    - stage: wheels
#      name: Wheels for Windows Python 3.4 x64
#      os: windows
#      language: shell
#
#      install:
#        - choco install python3 --version 3.4.4.20180111 --sidebyside -y --force --params "/InstallDir:C:\Python34-x64"
#        - export VS100COMNTOOLS="$VS140COMNTOOLS"
#        - export PATH="C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64;$PATH"
#        - export INCLUDE="C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\Include;C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17134.0\\ucrt;C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17134.0\\shared"
#        - export LIB="C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\LIB\\amd64;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.17134.0\\ucrt\\x64;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.17134.0\\um\\x64"
#
#      script:
#        - C:/Python34-x64/python -m pip install cibuildwheel==1.1.0
#        - C:/Python34-x64/python -m cibuildwheel --platform windows --output-dir wheelhouse
#
#      env:
#        - CIBW_BUILD='cp34-win_amd64'
#        - CIBW_BEFORE_BUILD='python -m pip install cython'
#      deploy:
#        name: Windows Python 3.4 x64
#        provider: releases
#        api_key: $GITHUB_TOKEN
#        file_glob: true
#        file: wheelhouse/*
#        skip_cleanup: true
#        draft: true
#        prerelease: true
#        overwrite: true
#        on:
#          tags: true

    - stage: wheels
      name: Wheels for Windows
      os: windows
      language: shell

      install:
        - choco install python3 --version 3.9.0 --params "/InstallDir:C:\Python39"
      script:
        - C:/Python39/python -m pip install cibuildwheel==1.6.4
        - C:/Python39/python -m cibuildwheel --platform windows --output-dir wheelhouse

      env:
        - CIBW_BUILD='cp*'
        - CIBW_BEFORE_BUILD='python -m pip install cython'
      deploy:
        name: Windows Python
        provider: releases
        api_key: $GITHUB_TOKEN
        file_glob: true
        file: wheelhouse/*
        skip_cleanup: true
        draft: true
        prerelease: true
        overwrite: true
        on:
          tags: true

    - stage: wheels
      name: Wheels for Windows PyPy
      os: windows
      language: shell

      install:
        - choco install python3 --version 3.9.0 --params "/InstallDir:C:\Python39"
      script:
        - C:/Python39/python -m pip install cibuildwheel==1.6.4
        - C:/Python39/python -m cibuildwheel --platform windows --output-dir wheelhouse

      env:
        - CIBW_BUILD='pp*'
        - CIBW_BEFORE_BUILD='python -m pip install cython'
      deploy:
        name: Windows Python PyPy
        provider: releases
        api_key: $GITHUB_TOKEN
        file_glob: true
        file: wheelhouse/*
        skip_cleanup: true
        draft: true
        prerelease: true
        overwrite: true
        on:
          tags: true
